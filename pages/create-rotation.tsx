import { ClassSelectInput, SpawnComponent } from 'components';
import Head from 'next/head';
import { useCreateRotation } from 'hooks';
import { FormProvider } from 'react-hook-form';
import { NormalInput } from 'components/shared/NormalInput';

export default function CreateRotation() {
  const { initialStates, setInitialStates, form, handleSubmit, onSubmit } =
    useCreateRotation();
  return (
    <>
      <Head>
        <title className=''>Create rotation - Ghost of Tsushima</title>
        <meta name='description' content='Generated by create next app' />
        <link rel='icon' href='/favicon.ico' />
      </Head>
      <div className=''>
        <h1 className='flex items-center justify-center font-teko text-4xl mt-12'>
          Create rotation
        </h1>
        <FormProvider {...form}>
          <form
            className='flex flex-col gap-12 px-2 2xl:px-24'
            onSubmit={handleSubmit(onSubmit)}
          >
            <>
              <button>submit</button>

              <ClassSelectInput
                initialState={true}
                initialStates={initialStates}
                setInitialStates={setInitialStates}
              />
              <NormalInput
                type={'text'}
                placeholder={'author'}
                id={'author'}
                registerOptions={{ required: 'required field' }}
                inputName={'initialState.author'}
                className={''}
              />

              <ul>
                {Array.from({ length: 16 }, (_, i) => i + 1).map((elem, i) => (
                  <li className='mt-4 flex flex-col' key={i}>
                    <h2 className='text-2xl font-ubuntu font-bold mb-1'>
                      Wave {i}
                    </h2>
                    <div>
                      <SpawnComponent
                        initialStates={initialStates}
                        setInitialStates={setInitialStates}
                        i={i}
                        objective={
                          i === 2 || i === 4 || i === 7 || i === 10 || i === 13
                            ? true
                            : false
                        }
                      />
                    </div>
                  </li>
                ))}
              </ul>
            </>
          </form>
        </FormProvider>
      </div>
    </>
  );
}
